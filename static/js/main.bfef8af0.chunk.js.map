{"version":3,"sources":["components/CalculatorSection/CalculatorSection.js","components/MainCalculator.js","App.js","index.js","components/CalculatorSection/CalculatorSection.module.css","components/MainCalculator.module.css"],"names":["CalculatorSection","setPercent","e","custom","value","target","bill","state","totalBill","persons","numOfPeople","percentCustom","current","setState","idRadio","id","wasCheck","checked","radioValue","document","getElementById","percent","calculatePercent","console","log","forEach","methods","bind","entrada","React","createRef","inputPerson","sliptTip","TotalPerson","PERCENTAGES","this","totalAmount","go","sliptTotal","total","bills","totalPe","parseInt","parseFloat","tipAmount","className","sty","container","billCnt","type","onChange","setBill","ref","billNPeop","hideArrow","ctnPercentage","radioToolbar","map","number","name","onClick","htmlFor","toString","placeholder","customPercent","changePeople","cntTotal","toFixed","reset","Component","MainCalculator","style","fondo","text","splitRight","splitLeft","contenedor","App","root","ReactDom","render","module","exports"],"mappings":"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","file":"static/js/main.bfef8af0.chunk.js","sourcesContent":["import React , { Fragment } from \"react\";\r\nimport { Component } from \"react\";\r\nimport sty from './CalculatorSection.module.css'\r\n//import { ReactDOM } from \"react\";\r\n//import reactDom from \"react-dom\";\r\n//import Percents from \"./Percents/Percents\";\r\n//import { SliptTip } from \"./Percents/Percents\";\r\n\r\nclass CalculatorSection extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n\r\n        const METHODS = [\r\n            'setBill',\r\n            'reset',\r\n            'changePeople',\r\n            'setPercent',\r\n            'calculatePercent'\r\n        ]\r\n        //this.calculatePercent.bind(this)\r\n        //this.setPercent.bind(this)\r\n        METHODS.forEach((methods)=>{\r\n            this[methods] = this[methods].bind(this);\r\n        })\r\n        this.entrada = React.createRef();\r\n        this.inputPerson = React.createRef();\r\n        this.percentCustom = React.createRef();\r\n\r\n        this.state={\r\n            sliptTip: 0.00,            \r\n            numOfPeople: 1,\r\n            TotalPerson:0,\r\n            totalBill: 0.00,\r\n            PERCENTAGES :[5, 10, 15, 25, 50],\r\n            percent:false,\r\n            radioValue: 0,\r\n            idRadio:'',\r\n            wasCheck: false\r\n        }\r\n\r\n    }\r\n\r\n    setBill(e){\r\n        this.setState({\r\n            totalBill: e.target.value\r\n        },()=>{\r\n            this.totalAmount(this.state.percent);\r\n            this.calculatePercent(this.state.radioValue,this.state.percent, this.state.totalBill, this.state.numOfPeople);\r\n        })\r\n    }    \r\n\r\n    reset(){\r\n        this.entrada.current.value = '';\r\n        this.inputPerson.current.value = '';\r\n        if(this.state.wasCheck) {\r\n            document.getElementById(this.state.idRadio).checked = false;\r\n        }\r\n        this.setState({\r\n            sliptTip: 0.00,            \r\n            numOfPeople: 1,\r\n            TotalPerson:0,\r\n            totalBill: 0.00,\r\n            percent:false,\r\n            radioValue: 0,\r\n            idRadio:'',\r\n            wasCheck: false\r\n       })\r\n    }\r\n   \r\n    changePeople(e){\r\n        let value\r\n        if(e.target.value <= 0 || e.target.value==='' ){\r\n            value = 1;\r\n            this.inputPerson.current.value = '';\r\n         }else{\r\n            value = e.target.value;\r\n        }\r\n        this.setState({\r\n            numOfPeople: value\r\n       },()=>{\r\n            this.totalAmount(this.state.percent);\r\n            this.calculatePercent(this.state.radioValue,this.state.percent, this.state.totalBill, this.state.numOfPeople)\r\n       })\r\n    }\r\n\r\n    totalAmount(go){\r\n        const sliptTotal = this.state.totalBill / this.state.numOfPeople\r\n        let tip\r\n        console.log(this.state.sliptTip)\r\n        go? tip = this.state.sliptTip : tip = 0\r\n        let total = sliptTotal + tip\r\n        this.setState({\r\n            TotalPerson: total\r\n        })\r\n    }\r\n\r\n    setPercent = (e, custom) =>{\r\n        let value = e.target.value;\r\n        const bill = this.state.totalBill;\r\n        const persons = this.state.numOfPeople;\r\n        if(!custom){\r\n            this.percentCustom.current.value=''\r\n            this.setState({\r\n                idRadio: e.target.id,\r\n                wasCheck: true\r\n            })\r\n        }\r\n        if((this.percentCustom.current.value===''&&custom)||(this.percentCustom.current.value<1&&custom)){\r\n            this.percentCustom.current.value='';\r\n            value=0\r\n        }\r\n        if((e.target.checked && this.state.radioValue !== value) || custom){\r\n            if(custom && this.state.wasCheck) {\r\n                document.getElementById(this.state.idRadio).checked = false;\r\n            }\r\n            this.setState({\r\n                percent:true,\r\n                radioValue:value,\r\n            },()=>{\r\n                this.calculatePercent(value,true, bill, persons)\r\n            })\r\n        }else if(e.target.checked && this.state.radioValue === e.target.value){\r\n            console.log('son iguales')\r\n            e.target.checked = false;\r\n            this.setState({\r\n                percent:false,\r\n                radioValue:''\r\n            },()=>{\r\n                this.calculatePercent(value,false, bill, persons)\r\n            })\r\n        }  \r\n    }\r\n\r\n    calculatePercent(value, go, bills, persons){\r\n        const totalPe = parseInt(persons)\r\n        let percent\r\n        go ? percent = parseFloat(value) : percent = 0\r\n        const tip = parseFloat(bills) * (percent/100)\r\n        const tipAmount = tip / totalPe;\r\n        console.log('tip amount:');\r\n        console.log(tipAmount);\r\n        this.setState({\r\n             sliptTip: tipAmount\r\n        },()=>{this.totalAmount(this.state.percent);})\r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div className={sty.container}>\r\n                <div>\r\n                    <div className={sty.billCnt}>\r\n                        <label>Bill</label>\r\n                        \r\n                        <input type='number' \r\n                        onChange={this.setBill} \r\n                        ref={this.entrada}\r\n                        className={`${sty.billNPeop} ${sty.hideArrow}`}/>\r\n                    </div>\r\n                    <div className={sty.ctnPercentage}>\r\n                        <label>Select Tip %</label>\r\n                        <div className={sty.radioToolbar}>\r\n                        {               \r\n                            this.state.PERCENTAGES.map((number)=>(\r\n                            <Fragment key={number.toString()}>                           \r\n                            <input \r\n                            type=\"radio\" \r\n                            id={`${number}Per`} \r\n                            value={number} \r\n                            name='percent' \r\n                            onClick={(e)=>{this.setPercent(e, false)}}                   \r\n                               />\r\n                            <label \r\n                            htmlFor={`${number}Per`}>\r\n                                {number}%</label>  \r\n                            </Fragment>\r\n                            ))\r\n                            \r\n                        }\r\n                        <input type='number' \r\n                         placeholder='Custom'  \r\n                         ref={this.percentCustom}\r\n                         className={`${sty.customPercent} ${sty.hideArrow}`}\r\n                         onChange={(e)=>{this.setPercent(e, true)}}\r\n                         />\r\n                    </div>\r\n                    </div>\r\n                    <div>\r\n                        <label>Number of people</label>\r\n                        <input type='number'\r\n                        className={`${sty.billNPeop} ${sty.hideArrow}`}\r\n                        onChange={this.changePeople}\r\n                        placeholder='1'  \r\n                        ref={this.inputPerson}                      \r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className={sty.cntTotal}>\r\n                    <div>\r\n                        <p>Tip Amount </p>\r\n                        <p>${this.state.sliptTip.toFixed(2)}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>Total </p>\r\n                        <p>${this.state.TotalPerson.toFixed(2)}</p>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={this.reset}>Reset</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\n/*class Percents extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        const METHODS = [\r\n            'setPercent',\r\n            'calculatePercent'\r\n        ]\r\n        METHODS.forEach((methods)=>{\r\n            this[methods] = this[methods].bind(this)\r\n        })\r\n        this.state={\r\n            PERCENTAGES :[5, 10, 15, 25, 50],\r\n            percent:false,\r\n            radioValue: 0,\r\n            sliptTip: 0.00\r\n        }\r\n    }\r\n    \r\n    setPercent = (e, bill = 0.00, persons = 1, func) =>{\r\n        const value = e.target.value\r\n        if(e.target.checked && this.state.radioValue !== value){\r\n            console.log('Dio true')\r\n            this.setState({\r\n                percent:true,\r\n                radioValue:value\r\n            },()=>{\r\n                this.calculatePercent(value,true, bill, persons)\r\n            })\r\n        }else if(e.target.checked && this.state.radioValue === e.target.value){\r\n            console.log('Dio falso')\r\n            e.target.checked = false;\r\n            this.setState({\r\n                percent:false,\r\n                radioValue:''\r\n            },()=>{\r\n                this.calculatePercent(value,false, bill, persons)\r\n            })\r\n        }  \r\n    }\r\n\r\n    calculatePercent(value, go, bills, persons){\r\n        const totalPe = parseInt(persons)\r\n        let percent\r\n        go ? percent = parseFloat(value) : percent = 0\r\n        const tip = parseFloat(bills) * (percent/100)\r\n        const tipAmount = tip / totalPe;\r\n        console.log('tip amount:');\r\n        console.log(tipAmount);\r\n        this.setState({\r\n             sliptTip: tipAmount\r\n        })\r\n        SliptTip(tipAmount)\r\n    }\r\n\r\n\r\n    render (){return (\r\n         <>\r\n            {               \r\n                this.state.PERCENTAGES.map((number)=>(\r\n                <Fragment key={number.toString()}>                           \r\n                <input \r\n                type=\"radio\" \r\n                id={`${number}Per`} \r\n                value={number} \r\n                name='percent' \r\n                onClick={(e)=>{\r\n                    this.setPercent(e, this.props.bill, this.props.persons)}}                   \r\n                    />\r\n                <label \r\n                htmlFor={`${number}Per`}>\r\n                    {number}%</label>  \r\n                </Fragment>\r\n                ))\r\n                \r\n            }\r\n            <input type='number' onChange={this.setPercent} placeholder='Custom' className={`${sty.customPercent} ${sty.hideArrow}`}/>\r\n         </>\r\n       \r\n    )}\r\n\r\n}\r\n\r\n\r\nconst SliptTip= (val)=> {\r\n    console.log('see the slipt function')\r\n    console.log(val)\r\n    reactDom.render(\r\n        <span>{val}</span>, document.getElementById('sliptTip')\r\n    )\r\n}*/\r\n\r\nexport default CalculatorSection","import React from \"react\";\r\nimport CalculatorSection from \"./CalculatorSection\";\r\nimport style from './MainCalculator.module.css'\r\n\r\nclass MainCalculator extends React.Component{\r\n\r\n    render(){return (\r\n        <div className={style.fondo}>\r\n            <div className={style.text}>\r\n                <span className={style.splitRight}>SPLITTER</span>\r\n                <span className={style.splitLeft}>SPLITTER</span>\r\n            </div>\r\n            <div className={style.contenedor}>\r\n                <div><CalculatorSection/></div>\r\n            </div>\r\n        </div> \r\n    )}\r\n\r\n   \r\n}\r\n\r\nexport default MainCalculator","import React from \"react\";\r\nimport MainCalculator from './components'\r\n\r\n\r\nconst App = () => (\r\n    <MainCalculator/>\r\n)\r\n\r\nexport default App","import React from \"react\";\r\nimport ReactDom from \"react-dom\"\r\n\r\nimport App from \"./App\";\r\n\r\nconst root = document.getElementById(\"root\");\r\n\r\nReactDom.render(<App/>, root)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CalculatorSection_container__OnvhT\",\"ctnPercentage\":\"CalculatorSection_ctnPercentage__Em18u\",\"radioToolbar\":\"CalculatorSection_radioToolbar__E7FkD\",\"customPercent\":\"CalculatorSection_customPercent__3cuQh\",\"billNPeop\":\"CalculatorSection_billNPeop__1orCb\",\"hideArrow\":\"CalculatorSection_hideArrow__2fir7\",\"billCnt\":\"CalculatorSection_billCnt__3JVqv\",\"cntTotal\":\"CalculatorSection_cntTotal__3Mmj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fondo\":\"MainCalculator_fondo__3Gfsd\",\"text\":\"MainCalculator_text__2_VnT\",\"animate\":\"MainCalculator_animate__2vUxJ\",\"contenedor\":\"MainCalculator_contenedor__9QVFY\"};"],"sourceRoot":""}